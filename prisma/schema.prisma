// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// avatar
model User {
  username       String   @id
  password       String
  favoriteMovies Movie[]
  Reviews        Review[]
  subscription   Boolean?
}

// рост, дата рожд., место рожд.
model Person {
  id              Int          @id @default(autoincrement())
  fullName        String
  fullNameEnglish String
  directedMovies  Movie[]      @relation("directorOfMovie")
  actedInMovies   Movie[]      @relation("actorsOfMovie")
  personGenres    Genre[]
  professions     Profession[]
  mainImage       String
}

// длительность, страна, возр. ограничение, год
model Movie {
  id               Int      @id @default(autoincrement())
  title            String
  director         Person   @relation("directorOfMovie", fields: [directorId], references: [id])
  directorId       Int
  mainActors       Person[] @relation("actorsOfMovie")
  favoredBy        User[]
  movieGenres      Genre[]
  mainImage        String
  movieDescription String
  movieSrc         String?
  duration         String?
  year             Int?
  country          String?
  age              Int?
  rating           Int?
  Review           Review[]
}

model Review {
  id       Int      @id @unique @default(autoincrement())
  dateTime DateTime
  text     String
  user     User     @relation(fields: [username], references: [username])
  username String
  movie    Movie    @relation(fields: [movieId], references: [id])
  movieId  Int
  // likes    Int
  // dislikes Int
}

enum Profession {
  Producer
  Director
  Actor
  Screenwriter
  Editor
  Operator
  Composer
}

enum Genre {
  drama
  crime
  fantastic
  comedy
  adventures
  horror
  actionMovie
  Western
  military
  detective
  melodrama
  documentary
  thriller
}
