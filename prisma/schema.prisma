// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  username  String   @id
  password  String
  favorites Movie[]
  Review    Review[]
}

model Person {
  id           Int          @id @default(autoincrement())
  fullName     String
  professions  Profession[]
  height       Int
  dateOfBirth  String
  placeOfBirth String
  genres       Genre[]
  mainImg      String
  otherImages  String[]
  directedIn   Movie[]      @relation("directorOfMovie")
  actedIn      Movie[]      @relation("actorsOfMovie")
}

model Movie {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  mainImg     String
  otherImages String[]
  genres      Genre[]
  year        String
  country     String
  duration    String
  ageLimit    String
  director    Person   @relation("directorOfMovie", fields: [directorId], references: [id])
  directorId  Int
  mainActors  Person[] @relation("actorsOfMovie")
  Review      Review[]
  favoredBy   User[]
}

model Review {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [username], references: [username])
  movie    Movie  @relation(fields: [movieId], references: [id])
  Text     String
  username String
  movieId  Int
}

enum Profession {
  Producer
  Director
  Actor
  Screenwriter
  Editor
  Operator
  Composer
}

enum Genre {
  drama
  crime
  fantastic
  comedy
  adventures
  horror
  actionMovie
  Western
  military
  detective
  melodrama
  documentary
  thriller
}
